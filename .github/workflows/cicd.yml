name: TerminalGPT-Release

on:
  push:
    branches: [ release ]

jobs:
  create_release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Build with dotnet
        run: dotnet publish --configuration Release --output ./published

      - name: Zip published directory
        run: |
          Compress-Archive -Path ./published/* -DestinationPath ./Terminal-GPT.zip

      - name: Create tag
        id: create_tag
        run: |
          VERSION=$(date +%s)        # Generate a tag using the Unix timestamp
          git tag $VERSION
          git push origin --tags
          echo ::set-output name=VERSION::$(VERSION)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.VERSION }}
          release_name: Release ${{ steps.create_tag.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Terminal-GPT.zip
          asset_name: Terminal-GPT.zip
          asset_content_type: application/zip
